#BlueJ class context
comment0.target=Menu
comment0.text=\r\n\ classe\ Menu.\r\n\r\n\ @author\ William\ Mesnil\r\n\ @version\ Version\ 6\r\n
comment1.params=menuWidth\ menuHeight
comment1.target=Menu(int,\ int)
comment1.text=\r\n\ Constructeur\ d'objets\ de\ classe\ Menu\r\n
comment10.params=
comment10.target=boolean\ supportTileOptionsChangeListener()
comment10.text=\r\n\ Methode\ supportTileOptionsChangeListener\ -\ Dit\ si\ Composants\ qui\ representent\ les\ Options\ Circulations\ supportent\ ChangeListener\r\n\r\n\ @return\ \ \ \ \ True\ si\ addChangeListener\ disponible\ et\ False\ si\ autre\ type\ de\ Listener\r\n
comment11.params=
comment11.target=java.util.List\ getTileOptionsComponents()
comment11.text=\r\n\ Methode\ getTileOptionsComponents\ -\ Recuperer\ les\ Composants\ qui\ representent\ les\ Options\ Circulations\r\n\r\n\ @return\ \ \ \ \ Les\ Composants\ Options\r\n
comment12.params=
comment12.target=java.lang.Class\ getTileOptionsComponentsClass()
comment12.text=\r\n\ Methode\ getTileOptionsComponentsClass\ -\ Recuperer\ la\ Classe\ des\ Composants\ qui\ representent\ les\ Options\ Circulations\r\n\r\n\ @return\ \ \ \ \ La\ Classe\ des\ Composants\ Options\r\n
comment13.params=menuQuitListener
comment13.target=void\ setMenuQuitListener(java.awt.event.ActionListener)
comment13.text=\r\n\ Methode\ setMenuQuitListener\ -\ Ajouter\ Listener\ au\ Bouton\ qui\ represente\ Commande\ Quitter\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n
comment14.params=menuQuitListener
comment14.target=void\ removeMenuQuitListener(java.awt.event.ActionListener)
comment14.text=\r\n\ Methode\ removeMenuQuitListener\ -\ Retirer\ Listener\ au\ Bouton\ qui\ represente\ Commande\ Quitter\r\n\r\n\ @param\ \ a\ \ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n
comment15.params=menuResetListener
comment15.target=void\ setMenuResetListener(java.awt.event.ActionListener)
comment15.text=\r\n\ Methode\ setMenuResetListener\ -\ Ajouter\ Listener\ au\ Bouton\ qui\ represente\ Commande\ Reset\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n
comment16.params=menuResetListener
comment16.target=void\ removeMenuResetListener(java.awt.event.ActionListener)
comment16.text=\r\n\ Methode\ removeMenuResetListener\ -\ Retirer\ Listener\ au\ Bouton\ qui\ represente\ Commande\ Reset\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n
comment17.params=menuOptionsListener
comment17.target=void\ setMenuOptionsListener(java.awt.event.ActionListener)
comment17.text=\r\n\ Methode\ setMenuOptionsListener\ -\ Ajouter\ Listener\ aux\ Composants\ qui\ representent\ les\ Options\ Circulations\ (operation\ optionelle)\r\n\ Implementer\ cette\ Methode\ conduira\ probablement\ a\ ne\ pas\ utiliser\ la\ version\ pour\ ChangeListener\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment18.params=menuOptionsListener
comment18.target=void\ removeMenuOptionsListener(java.awt.event.ActionListener)
comment18.text=\r\n\ Methode\ removeMenuOptionsListener\ -\ Retirer\ Listener\ aux\ Composants\ qui\ representent\ les\ Options\ Circulations\ (operation\ optionelle)\r\n\ Implementer\ cette\ Methode\ conduira\ probablement\ a\ ne\ pas\ utiliser\ la\ version\ pour\ ChangeListener\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment19.params=menuOptionsListener
comment19.target=void\ setMenuOptionsListener(javax.swing.event.ChangeListener)
comment19.text=\r\n\ Methode\ setMenuOptionsListener\ -\ Ajouter\ Listener\ aux\ Composants\ qui\ representent\ les\ Options\ Circulations\ (operation\ optionelle)\r\n\ Implementer\ cette\ Methode\ conduira\ probablement\ a\ ne\ pas\ utiliser\ la\ version\ pour\ ActionListener\r\n\ \r\n\ @param\ \ cl\ \ Le\ ChangeListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment2.params=
comment2.target=void\ setJSliders()
comment2.text=\r\n\ Methode\ setJSliders\ -\ Definir\ les\ JSliders\r\n\ \r\n\ @see\ \ \ \ \ \ \ \ TutorialsPoint\r\n\ @author\ \ \ \ \ EnumTools.getNames\ From\ Bohemian\ on\ StackOverflow\r\n\ @return\ \ \ \ \ void\r\n
comment20.params=menuOptionsListener
comment20.target=void\ removeMenuOptionsListener(javax.swing.event.ChangeListener)
comment20.text=\r\n\ Methode\ removeMenuOptionsListener\ -\ Retirer\ Listener\ aux\ Composants\ qui\ representent\ les\ Options\ Circulations\ (operation\ optionelle)\r\n\ Implementer\ cette\ Methode\ conduira\ probablement\ a\ ne\ pas\ utiliser\ la\ version\ pour\ ActionListener\r\n\r\n\ @param\ \ cl\ \ Le\ ChangeListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment21.params=menuAutoListener
comment21.target=void\ setMenuAutoListener(java.awt.event.ActionListener)
comment21.text=\r\n\ Methode\ setMenuAutoListener\ -\ Ajouter\ Listener\ Bouton\ qui\ represente\ Auto\ (operation\ optionelle)\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment22.params=menuAutoListener
comment22.target=void\ removeMenuAutoListener(java.awt.event.ActionListener)
comment22.text=\r\n\ Methode\ removeMenuAutoListener\ -\ Retirer\ Listener\ Bouton\ qui\ represente\ Auto\ (operation\ optionelle)\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment23.params=menuRandomListener
comment23.target=void\ setMenuRandomListener(java.awt.event.ActionListener)
comment23.text=\r\n\ Methode\ setMenuRandomListener\ -\ Ajouter\ Listener\ au\ Bouton\ qui\ represente\ Option\ Random\ (operation\ optionelle)\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment24.params=menuRandomListener
comment24.target=void\ removeMenuRandomListener(java.awt.event.ActionListener)
comment24.text=\r\n\ Methode\ removeMenuRandomListener\ -\ Retirer\ Listener\ au\ Bouton\ qui\ represente\ Option\ Random\ (operation\ optionelle)\r\n\r\n\ @param\ \ al\ \ Le\ ActionListener\r\n\ @return\ \ \ \ \ void\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment3.params=
comment3.target=Circulation[]\ getTileOptionsValues()
comment3.text=\r\n\ Methode\ getTileOptionsValues\ -\ Recuperer\ la\ valeur\ des\ Options\ Circulations\r\n\r\n\ @return\ \ \ \ \ Les\ Options\r\n
comment4.params=
comment4.target=boolean\ hasRandomOption()
comment4.text=\r\n\ Methode\ hasRandomOption\ -\ Dit\ si\ Bouton\ Random\r\n\r\n\ @return\ \ \ \ \ True\ si\ Bouton\ Random\r\n
comment5.params=
comment5.target=boolean\ getRandomOptionValue()
comment5.text=\r\n\ Methode\ getRandomOptionValue\ -\ Dit\ si\ Bouton\ Random\ selectionne\ (operation\ optionelle)\r\n\r\n\ @return\ \ \ \ \ True\ si\ selectionne\ ou\ renvoie\ Exception\ si\ pas\ de\ Random\ dans\ Menu\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment6.params=
comment6.target=boolean\ hasAutoOption()
comment6.text=\r\n\ Methode\ hasAutoOption\ -\ Dit\ si\ Bouton\ Auto\r\n\r\n\ @return\ \ \ \ \ True\ si\ Bouton\ Auto\r\n
comment7.params=
comment7.target=boolean\ getAutoOptionValue()
comment7.text=\r\n\ Methode\ getAutoOptionValue\ -\ Dit\ si\ Bouton\ Auto\ selectionne\ (operation\ optionelle)\r\n\r\n\ @return\ \ \ \ \ True\ si\ selectionne\ ou\ renvoie\ Exception\ si\ pas\ de\ Auto\ dans\ Menu\r\n\ @throws\ \ \ \ \ UnsupportedOperationException\r\n
comment8.params=bool
comment8.target=void\ setEnabledTileOptions(boolean)
comment8.text=\r\n\ Methode\ setEnabledTileOptions\ -\ Activer\ ou\ Desactiver\ Modification\ Options\r\n\r\n\ @param\ \ bool\ La\ Valeur\r\n\ @return\ \ \ \ \ \ void\r\n
comment9.params=
comment9.target=boolean\ supportTileOptionsActionListener()
comment9.text=\r\n\ Methode\ supportTileOptionsActionListener\ -\ Dit\ si\ Composants\ qui\ representent\ les\ Options\ Circulations\ supportent\ ActionListener\r\n\r\n\ @return\ \ \ \ \ True\ si\ addActionListener\ disponible\ et\ False\ si\ autre\ type\ de\ Listener\r\n
numComments=25
